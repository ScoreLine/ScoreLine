Index: feature/favourites/src/main/java/com/swayy/favourites/presentation/FavouritesScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swayy.favourites.presentation\n\nimport androidx.compose.runtime.Composable\n\n@Composable\nfun FavouritesScreen(){\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/feature/favourites/src/main/java/com/swayy/favourites/presentation/FavouritesScreen.kt b/feature/favourites/src/main/java/com/swayy/favourites/presentation/FavouritesScreen.kt
--- a/feature/favourites/src/main/java/com/swayy/favourites/presentation/FavouritesScreen.kt	
+++ b/feature/favourites/src/main/java/com/swayy/favourites/presentation/FavouritesScreen.kt	
@@ -1,8 +1,120 @@
 package com.swayy.favourites.presentation
 
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
 import androidx.compose.runtime.Composable
+import androidx.compose.runtime.LaunchedEffect
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.ImageBitmap
+import androidx.compose.ui.graphics.painter.Painter
+import androidx.compose.ui.layout.ContentScale
+import androidx.compose.ui.res.imageResource
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.unit.Dp
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import coil.annotation.ExperimentalCoilApi
+import coil.compose.ImagePainter
+import coil.compose.rememberImagePainter
+import coil.transform.CircleCropTransformation
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.withContext
+import org.jsoup.Jsoup
+import java.io.IOException
+import kotlin.coroutines.resume
+import kotlin.coroutines.resumeWithException
+import kotlin.coroutines.suspendCoroutine
 
 @Composable
-fun FavouritesScreen(){
+fun FavouritesScreen() {
+    var clubs by remember { mutableStateOf(emptyList<Club>()) }
+
+    LaunchedEffect(Unit) {
+        clubs = scrapeClubs()
+    }
+    LazyColumn {
+        items(clubs) { club ->
+            ClubItem(club)
+        }
+    }
+}
+
+@Composable
+fun ClubItem(club: Club) {
+    Row {
+        val imagePainter = rememberImagePainter(
+            data = club.imageUrl,
+            builder = {
+                transformations(CircleCropTransformation())
+            }
+        )
+
+
+        Image(
+            painter = imagePainter,
+            contentDescription = club.name,
+            modifier = Modifier
+                .size(48.dp)
+                .padding(8.dp),
+            contentScale = ContentScale.Fit
+        )
+
+        androidx.compose.material3.Text(
+            text = club.name,
+            style = androidx.compose.material3.MaterialTheme.typography.bodyLarge,
+            fontSize = 20.sp,
+            fontWeight = FontWeight.Bold,
+
+            )
+    }
+
+
+}
+
+data class Club(val name: String, val imageUrl: String, val websiteUrl: String)
+
 
+suspend fun scrapeClubs(): List<Club> = withContext(Dispatchers.IO) {
+    val url = "https://www.premierleague.com/clubs"
+    val clubs = mutableListOf<Club>()
+
+    try {
+        val doc = Jsoup.connect(url).get()
+        val clubElements = doc.select("li.clubList__club")
+
+        for (clubElement in clubElements) {
+            val linkElement = clubElement.selectFirst("a.clubList__link")
+            val imageElement = clubElement.selectFirst("img.badge-image")
+            val nameElement = clubElement.selectFirst("span.name")
+
+            val club = nameElement?.let {
+                imageElement?.let { it1 ->
+                    linkElement?.let { it2 ->
+                        Club(
+                            it.text(),
+                            it1.attr("src"),
+                            it2.attr("href")
+                        )
+                    }
+                }
+            }
+            clubs.add(club!!)
+        }
+
+        clubs
+    } catch (e: IOException) {
+        e.printStackTrace()
+        throw e
+    }
 }
\ No newline at end of file
Index: feature/favourites/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@Suppress(\"DSL_SCOPE_VIOLATION\") // TODO: Remove once KTIJ-19369 is fixed\nplugins {\n    alias(libs.plugins.com.android.library)\n    alias(libs.plugins.org.jetbrains.kotlin.android)\n    id(\"kotlin-kapt\")\n    id(\"dagger.hilt.android.plugin\")\n}\n\nandroid {\n    namespace = \"com.swayy.favourites\"\n    compileSdk = 33\n\n    defaultConfig {\n        minSdk = 24\n\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n        consumerProguardFiles(\"consumer-rules.pro\")\n    }\n\n    buildTypes {\n        release {\n            isMinifyEnabled = false\n            proguardFiles(\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\n                \"proguard-rules.pro\"\n            )\n        }\n    }\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\n    kotlinOptions {\n        jvmTarget = \"17\"\n    }\n    buildFeatures {\n        compose = true\n    }\n    composeOptions {\n        kotlinCompilerExtensionVersion = \"1.4.3\"\n    }\n    packaging {\n        resources {\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\n        }\n    }\n}\n\ndependencies {\n\n    implementation(project(\":core\"))\n    implementation(project(\":core-network\"))\n    implementation(project(\":core-database\"))\n\n    implementation(libs.coil)\n    implementation(libs.core.ktx)\n    implementation(libs.lifecycle.runtime.ktx)\n    implementation(libs.activity.compose)\n    implementation(platform(libs.compose.bom))\n    implementation(libs.ui)\n    implementation(libs.ui.graphics)\n    implementation(libs.ui.tooling.preview)\n    implementation(libs.material3)\n    testImplementation(libs.junit)\n    androidTestImplementation(libs.androidx.test.ext.junit)\n    androidTestImplementation(libs.espresso.core)\n    androidTestImplementation(platform(libs.compose.bom))\n    androidTestImplementation(libs.ui.test.junit4)\n    debugImplementation(libs.ui.tooling)\n    debugImplementation(libs.ui.test.manifest)\n\n    //compose lifecycle\n    implementation(libs.compose.lyfecycle)\n\n    //compose util\n    implementation(libs.compose.util)\n\n    //navigation\n    implementation(libs.compose.navigation)\n    implementation(libs.accompanist.animation)\n\n    implementation(libs.accompanist.pager) // Pager\n    implementation(libs.accompanist.pager.indicators) // Pager Indicators\n\n    // System UI Controller - Accompanist\n    implementation(libs.accompanist.systemuicontroller)\n\n\n    implementation(libs.retrofit)\n    // Dagger - Hilt\n    implementation(libs.hilt.android)\n    kapt(libs.hilt.android.compiler)\n    implementation(libs.hilt.navigation.compose)\n    // when using Kotlin\n    kapt(libs.hilt.compiler)\n\n    //material icons\n    implementation(libs.material.icons)\n\n    //support library\n    implementation(libs.appcompat)\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/feature/favourites/build.gradle.kts b/feature/favourites/build.gradle.kts
--- a/feature/favourites/build.gradle.kts	
+++ b/feature/favourites/build.gradle.kts	
@@ -99,4 +99,9 @@
 
     //support library
     implementation(libs.appcompat)
+
+    implementation(libs.jsoup)
+
+    implementation(libs.coil)
+
 }
\ No newline at end of file
Index: core-database/src/main/java/com/swayy/core_database/MatchesDatabase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swayy.core_database\n\nimport androidx.room.Database\nimport androidx.room.RoomDatabase\nimport androidx.room.TypeConverters\nimport com.swayy.core_database.converters.Converters\nimport com.swayy.core_database.dao.MatchesDao\nimport com.swayy.core_database.dao.NewsDao\nimport com.swayy.core_database.dao.StandingsDao\nimport com.swayy.core_database.model.EventsEntity\nimport com.swayy.core_database.model.LeaguesEntity\nimport com.swayy.core_database.model.LineupEntity\nimport com.swayy.core_database.model.MatchesEntity\nimport com.swayy.core_database.model.NewsEntity\nimport com.swayy.core_database.model.StandingsEntity\n\n@Database(entities = [MatchesEntity::class, LineupEntity::class,EventsEntity::class,NewsEntity::class,StandingsEntity::class,LeaguesEntity::class], version = 13, exportSchema = true)\n@TypeConverters(Converters::class)\nabstract class MatchesDatabase : RoomDatabase() {\n    abstract val matchesDao: MatchesDao\n    abstract val newsDao: NewsDao\n    abstract val standingsDao: StandingsDao\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core-database/src/main/java/com/swayy/core_database/MatchesDatabase.kt b/core-database/src/main/java/com/swayy/core_database/MatchesDatabase.kt
--- a/core-database/src/main/java/com/swayy/core_database/MatchesDatabase.kt	
+++ b/core-database/src/main/java/com/swayy/core_database/MatchesDatabase.kt	
@@ -4,9 +4,11 @@
 import androidx.room.RoomDatabase
 import androidx.room.TypeConverters
 import com.swayy.core_database.converters.Converters
+import com.swayy.core_database.dao.ClubsDao
 import com.swayy.core_database.dao.MatchesDao
 import com.swayy.core_database.dao.NewsDao
 import com.swayy.core_database.dao.StandingsDao
+import com.swayy.core_database.model.ClubsEntity
 import com.swayy.core_database.model.EventsEntity
 import com.swayy.core_database.model.LeaguesEntity
 import com.swayy.core_database.model.LineupEntity
@@ -14,10 +16,22 @@
 import com.swayy.core_database.model.NewsEntity
 import com.swayy.core_database.model.StandingsEntity
 
-@Database(entities = [MatchesEntity::class, LineupEntity::class,EventsEntity::class,NewsEntity::class,StandingsEntity::class,LeaguesEntity::class], version = 13, exportSchema = true)
+@Database(
+    entities = [
+        MatchesEntity::class,
+        LineupEntity::class,
+        EventsEntity::class,
+        NewsEntity::class,
+        StandingsEntity::class,
+        LeaguesEntity::class,
+        ClubsEntity::class],
+    version = 14,
+    exportSchema = true
+)
 @TypeConverters(Converters::class)
 abstract class MatchesDatabase : RoomDatabase() {
     abstract val matchesDao: MatchesDao
     abstract val newsDao: NewsDao
     abstract val standingsDao: StandingsDao
+    abstract val clubsDao: ClubsDao
 }
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pluginManagement {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n\nrootProject.name = \"FootballPro\"\ninclude(\":app\")\ninclude(\":core\")\ninclude(\":compose-ui\")\ninclude(\":core-database\")\ninclude(\":core-network\")\ninclude(\":feature\")\ninclude(\":feature:matches\")\ninclude(\":feature:news\")\ninclude(\":feature:more\")\ninclude(\":feature:standings\")\ninclude(\":feature:favourites\")\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
--- a/settings.gradle.kts	
+++ b/settings.gradle.kts	
@@ -25,3 +25,4 @@
 include(":feature:more")
 include(":feature:standings")
 include(":feature:favourites")
+include(":feature:shared")
